<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.adong.start.dao.AgentDao">


    <select id="getAgent" resultType="com.adong.start.model.Agent">
 select a_id as aId from agent where creator =  #{creator}
</select>

    <select id="selectAgent" resultType="com.adong.start.model.Agent">
SELECT
	a.counts AS monthNum,
	b.counts AS quarterNum,
	c.counts AS weekNum,
	a.creator
FROM
	( SELECT count( creator ) AS counts, creator FROM house_info WHERE createDate >= DATE_SUB( NOW(), INTERVAL 30 DAY ) GROUP BY creator ) a
	LEFT JOIN ( SELECT count( creator ) AS counts, creator FROM house_info WHERE createDate >= DATE_SUB( NOW(), INTERVAL 90 DAY ) GROUP BY creator ) b
	on a.creator =b.creator
		LEFT JOIN ( SELECT count( creator ) AS counts, creator FROM house_info WHERE createDate >= DATE_SUB( NOW(), INTERVAL 7 DAY ) GROUP BY creator ) c
	on a.creator =c.creator
WHERE
	a.counts > 10
</select>

    <select id="getStation" resultType="com.adong.start.model.StationAgent">
		select DISTINCT station,city  from  rent_info
		where h_id in (
		select id from  house_info where creator =  #{creator}
		and  createDate >= DATE_SUB(NOW(),INTERVAL 30 day) )
		and station is not null
</select>

    <select id="getLastInfo" resultType="com.adong.start.model.Houseinfo">
		select a.* from house_info a right join (
		select  creator ,max(createDate) as createDate
		from  house_info  where creator =  #{creator}  GROUP BY  creator ) b   on a.creator =b.creator and a.createDate =b.createDate
</select>

    <delete id="deleteStation">
delete from station_agent where agent =#{creator}
    </delete>

    <insert id="insertStation" parameterType="java.util.List">
        insert into station_agent(
        city,
        station,
        agent)
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.city},
            #{item.station},
            #{item.agent})
        </foreach>
    </insert>
</mapper>